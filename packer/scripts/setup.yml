---
- name: "Setup.yml"
  hosts: localhost
  gather_facts: yes
  become: yes
  tasks:
  - name: Colorize root shell prompt
    lineinfile:
      path: /root/.bashrc
      line: 'export PS1="\[\033[38;5;11m\]\u\[$(tput sgr0)\]\[\033[38;5;15m\]@\h:\[$(tput sgr0)\]\[\033[38;5;6m\][\w]:\[$(tput sgr0)\]\[\033[38;5;15m\] \[$(tput sgr0)\]"'
      state: present

  - name: Alias vi to vim
    lineinfile:
      path: /root/.bashrc
      line: "alias vi='vim'"
      state: present

  - name: Create vim configuration file
    file:
      path: /root/.vimrc
      state: touch
      owner: root
      group: root
      mode: 0644

  - name: Configure vim
    blockinfile:
      path: /root/.vimrc
      block: |
        set nocompatible
        set number
        set autoindent
        syntax on
        highlight Comment ctermfg=LightCyan
      marker: ""
      state: present

#  - name: Enable root SSH login
#    lineinfile:
#      path: /etc/ssh/sshd_config
#      regexp: "^PermitRootLogin"
#      line: "PermitRootLogin yes"
#      state: present

  - name: Disable quiet boot mode
    lineinfile:
      path: /etc/default/grub
      regexp: 'GRUB_CMDLINE_LINUX_DEFAULT="quiet"'
      line: 'GRUB_CMDLINE_LINUX_DEFAULT=""'
      state: present
      
  - name: Disable IPv6 with sysctl
    sysctl: name={{ item }} value=1 state=present reload=yes
    with_items:
      - net.ipv6.conf.all.disable_ipv6
      - net.ipv6.conf.default.disable_ipv6
      - net.ipv6.conf.lo.disable_ipv6

  - name: stop service
    service:
      name: apparmor
      state: stopped
    failed_when: false
    tags:
      - configuration
      - apparmor

  - name: remove service
    service:
      name: apparmor
      enabled: false
    failed_when: false
    tags:
      - configuration
      - apparmor

  - name: remove package
    apt:
      name: apparmor
      state: absent
      purge: true
    tags:
      - configuration
      - apparmor

  - name: Update grub2
    command: update-grub2

  - name: Upgrade all packages
    apt:
      update_cache: yes
      upgrade: dist
      
  - name: Set authorized keys taken from url
    ansible.posix.authorized_key:
      user: packer
      state: present
      key: https://agileticonf.s3.eu-west-2.amazonaws.com/packer_rsa.pub

  - name: Install packages
    apt:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
      - curl
      - openssl
      - git
      - net-tools
      - rsync
      - screen
      - tcpdump
      - vim
      - wget
      - htop
      - ntp
      - sudo

  - name: Install open-vm-tools
    apt:
      name: open-vm-tools
      state: latest
    when:
      - ansible_virtualization_type == "VMware"
